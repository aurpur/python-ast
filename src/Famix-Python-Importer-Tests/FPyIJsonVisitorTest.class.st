Class {
	#name : #FPyIJsonVisitorTest,
	#superclass : #TestCase,
	#category : #'Famix-Python-Importer-Tests-visitor'
}

{ #category : #parsing }
FPyIJsonVisitorTest >> parse: jsonCode [

	"	^FPyIJsonVisitor new visitJsonEntity: ((NeoJSONReader on: jsonCode readStream) next)"

	^ FPyIJsonVisitor new visitJsonEntity:
		  (NeoJSONReader fromString: jsonCode); yourself 
]

{ #category : #parsing }
FPyIJsonVisitorTest >> testParseJson [
|model|

model := self parse: '{ "_type": "Module", "body": [ { "_type": "ImportFrom", "col_offset": 0, "end_col_offset": 52, "end_lineno": 2, "level": 0, "lineno": 2, "module": "keras.layers.convolutional", "names": [ { "_type": "alias", "asname": null, "col_offset": 39, "end_col_offset": 52, "end_lineno": 2, "lineno": 2, "name": "Convolution2D" } ] }, { "_type": "ImportFrom", "col_offset": 0, "end_col_offset": 82, "end_lineno": 3, "level": 0, "lineno": 3, "module": "keras.layers", "names": [ { "_type": "alias", "asname": null, "col_offset": 25, "end_col_offset": 32, "end_lineno": 3, "lineno": 3, "name": "Flatten" }, { "_type": "alias", "asname": null, "col_offset": 34, "end_col_offset": 44, "end_lineno": 3, "lineno": 3, "name": "Activation" }, { "_type": "alias", "asname": null, "col_offset": 46, "end_col_offset": 62, "end_lineno": 3, "lineno": 3, "name": "AveragePooling2D" }, { "_type": "alias", "asname": null, "col_offset": 64, "end_col_offset": 82, "end_lineno": 3, "lineno": 3, "name": "BatchNormalization" } ] }, { "_type": "ImportFrom", "col_offset": 0, "end_col_offset": 30, "end_lineno": 4, "level": 0, "lineno": 4, "module": "keras.models", "names": [ { "_type": "alias", "asname": null, "col_offset": 25, "end_col_offset": 30, "end_lineno": 4, "lineno": 4, "name": "Model" } ] }, { "_type": "ImportFrom", "col_offset": 0, "end_col_offset": 30, "end_lineno": 5, "level": 0, "lineno": 5, "module": "keras.layers", "names": [ { "_type": "alias", "asname": null, "col_offset": 25, "end_col_offset": 30, "end_lineno": 5, "lineno": 5, "name": "Input" } ] }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 15, "end_lineno": 7, "lineno": 7, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 10, "end_lineno": 7, "id": "nb_classes", "lineno": 7 } ], "type_comment": null, "value": { "_type": "Constant", "col_offset": 13, "end_col_offset": 15, "end_lineno": 7, "kind": null, "lineno": 7, "n": 10, "s": 10, "value": 10 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 34, "end_lineno": 8, "lineno": 8, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 9, "end_lineno": 8, "id": "input_img", "lineno": 8 } ], "type_comment": null, "value": { "_type": "Call", "args": [], "col_offset": 12, "end_col_offset": 34, "end_lineno": 8, "func": { "_type": "Name", "col_offset": 12, "ctx": { "_type": "Load" }, "end_col_offset": 17, "end_lineno": 8, "id": "Input", "lineno": 8 }, "keywords": [ { "_type": "keyword", "arg": "shape", "col_offset": 18, "end_col_offset": 33, "end_lineno": 8, "lineno": 8, "value": { "_type": "Tuple", "col_offset": 24, "ctx": { "_type": "Load" }, "dims": [ { "_type": "Constant", "col_offset": 25, "end_col_offset": 27, "end_lineno": 8, "kind": null, "lineno": 8, "n": 28, "s": 28, "value": 28 }, { "_type": "Constant", "col_offset": 28, "end_col_offset": 30, "end_lineno": 8, "kind": null, "lineno": 8, "n": 28, "s": 28, "value": 28 }, { "_type": "Constant", "col_offset": 31, "end_col_offset": 32, "end_lineno": 8, "kind": null, "lineno": 8, "n": 1, "s": 1, "value": 1 } ], "elts": [ { "_type": "Constant", "col_offset": 25, "end_col_offset": 27, "end_lineno": 8, "kind": null, "lineno": 8, "n": 28, "s": 28, "value": 28 }, { "_type": "Constant", "col_offset": 28, "end_col_offset": 30, "end_lineno": 8, "kind": null, "lineno": 8, "n": 28, "s": 28, "value": 28 }, { "_type": "Constant", "col_offset": 31, "end_col_offset": 32, "end_lineno": 8, "kind": null, "lineno": 8, "n": 1, "s": 1, "value": 1 } ], "end_col_offset": 33, "end_lineno": 8, "lineno": 8 } } ], "lineno": 8 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 68, "end_lineno": 10, "lineno": 10, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 5, "end_lineno": 10, "id": "conv6", "lineno": 10 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 62, "ctx": { "_type": "Load" }, "end_col_offset": 67, "end_lineno": 10, "id": "relu5", "lineno": 10 } ], "col_offset": 8, "end_col_offset": 68, "end_lineno": 10, "func": { "_type": "Call", "args": [ { "_type": "Constant", "col_offset": 22, "end_col_offset": 25, "end_lineno": 10, "kind": null, "lineno": 10, "n": 192, "s": 192, "value": 192 }, { "_type": "Constant", "col_offset": 27, "end_col_offset": 28, "end_lineno": 10, "kind": null, "lineno": 10, "n": 3, "s": 3, "value": 3 } ], "col_offset": 8, "end_col_offset": 61, "end_lineno": 10, "func": { "_type": "Name", "col_offset": 8, "ctx": { "_type": "Load" }, "end_col_offset": 21, "end_lineno": 10, "id": "Convolution2D", "lineno": 10 }, "keywords": [ { "_type": "keyword", "arg": "strides", "col_offset": 30, "end_col_offset": 43, "end_lineno": 10, "lineno": 10, "value": { "_type": "Tuple", "col_offset": 38, "ctx": { "_type": "Load" }, "dims": [ { "_type": "Constant", "col_offset": 39, "end_col_offset": 40, "end_lineno": 10, "kind": null, "lineno": 10, "n": 2, "s": 2, "value": 2 }, { "_type": "Constant", "col_offset": 41, "end_col_offset": 42, "end_lineno": 10, "kind": null, "lineno": 10, "n": 2, "s": 2, "value": 2 } ], "elts": [ { "_type": "Constant", "col_offset": 39, "end_col_offset": 40, "end_lineno": 10, "kind": null, "lineno": 10, "n": 2, "s": 2, "value": 2 }, { "_type": "Constant", "col_offset": 41, "end_col_offset": 42, "end_lineno": 10, "kind": null, "lineno": 10, "n": 2, "s": 2, "value": 2 } ], "end_col_offset": 43, "end_lineno": 10, "lineno": 10 } }, { "_type": "keyword", "arg": "padding", "col_offset": 45, "end_col_offset": 60, "end_lineno": 10, "lineno": 10, "value": { "_type": "Constant", "col_offset": 53, "end_col_offset": 60, "end_lineno": 10, "kind": null, "lineno": 10, "n": "valid", "s": "valid", "value": "valid" } } ], "lineno": 10 }, "keywords": [], "lineno": 10 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 33, "end_lineno": 12, "lineno": 12, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 3, "end_lineno": 12, "id": "bn2", "lineno": 12 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 27, "ctx": { "_type": "Load" }, "end_col_offset": 32, "end_lineno": 12, "id": "conv6", "lineno": 12 } ], "col_offset": 6, "end_col_offset": 33, "end_lineno": 12, "func": { "_type": "Call", "args": [], "col_offset": 6, "end_col_offset": 26, "end_lineno": 12, "func": { "_type": "Name", "col_offset": 6, "ctx": { "_type": "Load" }, "end_col_offset": 24, "end_lineno": 12, "id": "BatchNormalization", "lineno": 12 }, "keywords": [], "lineno": 12 }, "keywords": [], "lineno": 12 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 31, "end_lineno": 13, "lineno": 13, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 5, "end_lineno": 13, "id": "relu6", "lineno": 13 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 27, "ctx": { "_type": "Load" }, "end_col_offset": 30, "end_lineno": 13, "id": "bn2", "lineno": 13 } ], "col_offset": 8, "end_col_offset": 31, "end_lineno": 13, "func": { "_type": "Call", "args": [ { "_type": "Constant", "col_offset": 19, "end_col_offset": 25, "end_lineno": 13, "kind": null, "lineno": 13, "n": "relu", "s": "relu", "value": "relu" } ], "col_offset": 8, "end_col_offset": 26, "end_lineno": 13, "func": { "_type": "Name", "col_offset": 8, "ctx": { "_type": "Load" }, "end_col_offset": 18, "end_lineno": 13, "id": "Activation", "lineno": 13 }, "keywords": [], "lineno": 13 }, "keywords": [], "lineno": 13 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 52, "end_lineno": 14, "lineno": 14, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 5, "end_lineno": 14, "id": "conv7", "lineno": 14 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 46, "ctx": { "_type": "Load" }, "end_col_offset": 51, "end_lineno": 14, "id": "relu6", "lineno": 14 } ], "col_offset": 8, "end_col_offset": 52, "end_lineno": 14, "func": { "_type": "Call", "args": [ { "_type": "Constant", "col_offset": 22, "end_col_offset": 25, "end_lineno": 14, "kind": null, "lineno": 14, "n": 192, "s": 192, "value": 192 }, { "_type": "Constant", "col_offset": 27, "end_col_offset": 28, "end_lineno": 14, "kind": null, "lineno": 14, "n": 3, "s": 3, "value": 3 } ], "col_offset": 8, "end_col_offset": 45, "end_lineno": 14, "func": { "_type": "Name", "col_offset": 8, "ctx": { "_type": "Load" }, "end_col_offset": 21, "end_lineno": 14, "id": "Convolution2D", "lineno": 14 }, "keywords": [ { "_type": "keyword", "arg": "padding", "col_offset": 30, "end_col_offset": 44, "end_lineno": 14, "lineno": 14, "value": { "_type": "Constant", "col_offset": 38, "end_col_offset": 44, "end_lineno": 14, "kind": null, "lineno": 14, "n": "same", "s": "same", "value": "same" } } ], "lineno": 14 }, "keywords": [], "lineno": 14 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 33, "end_lineno": 15, "lineno": 15, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 5, "end_lineno": 15, "id": "relu7", "lineno": 15 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 27, "ctx": { "_type": "Load" }, "end_col_offset": 32, "end_lineno": 15, "id": "conv7", "lineno": 15 } ], "col_offset": 8, "end_col_offset": 33, "end_lineno": 15, "func": { "_type": "Call", "args": [ { "_type": "Constant", "col_offset": 19, "end_col_offset": 25, "end_lineno": 15, "kind": null, "lineno": 15, "n": "relu", "s": "relu", "value": "relu" } ], "col_offset": 8, "end_col_offset": 26, "end_lineno": 15, "func": { "_type": "Name", "col_offset": 8, "ctx": { "_type": "Load" }, "end_col_offset": 18, "end_lineno": 15, "id": "Activation", "lineno": 15 }, "keywords": [], "lineno": 15 }, "keywords": [], "lineno": 15 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 53, "end_lineno": 17, "lineno": 17, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 5, "end_lineno": 17, "id": "conv8", "lineno": 17 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 47, "ctx": { "_type": "Load" }, "end_col_offset": 52, "end_lineno": 17, "id": "relu7", "lineno": 17 } ], "col_offset": 8, "end_col_offset": 53, "end_lineno": 17, "func": { "_type": "Call", "args": [ { "_type": "Constant", "col_offset": 22, "end_col_offset": 25, "end_lineno": 17, "kind": null, "lineno": 17, "n": 192, "s": 192, "value": 192 }, { "_type": "Constant", "col_offset": 27, "end_col_offset": 28, "end_lineno": 17, "kind": null, "lineno": 17, "n": 1, "s": 1, "value": 1 } ], "col_offset": 8, "end_col_offset": 46, "end_lineno": 17, "func": { "_type": "Name", "col_offset": 8, "ctx": { "_type": "Load" }, "end_col_offset": 21, "end_lineno": 17, "id": "Convolution2D", "lineno": 17 }, "keywords": [ { "_type": "keyword", "arg": "padding", "col_offset": 30, "end_col_offset": 45, "end_lineno": 17, "lineno": 17, "value": { "_type": "Constant", "col_offset": 38, "end_col_offset": 45, "end_lineno": 17, "kind": null, "lineno": 17, "n": "valid", "s": "valid", "value": "valid" } } ], "lineno": 17 }, "keywords": [], "lineno": 17 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 33, "end_lineno": 18, "lineno": 18, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 5, "end_lineno": 18, "id": "relu8", "lineno": 18 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 27, "ctx": { "_type": "Load" }, "end_col_offset": 32, "end_lineno": 18, "id": "conv8", "lineno": 18 } ], "col_offset": 8, "end_col_offset": 33, "end_lineno": 18, "func": { "_type": "Call", "args": [ { "_type": "Constant", "col_offset": 19, "end_col_offset": 25, "end_lineno": 18, "kind": null, "lineno": 18, "n": "relu", "s": "relu", "value": "relu" } ], "col_offset": 8, "end_col_offset": 26, "end_lineno": 18, "func": { "_type": "Name", "col_offset": 8, "ctx": { "_type": "Load" }, "end_col_offset": 18, "end_lineno": 18, "id": "Activation", "lineno": 18 }, "keywords": [], "lineno": 18 }, "keywords": [], "lineno": 18 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 60, "end_lineno": 20, "lineno": 20, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 5, "end_lineno": 20, "id": "conv9", "lineno": 20 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 54, "ctx": { "_type": "Load" }, "end_col_offset": 59, "end_lineno": 20, "id": "relu8", "lineno": 20 } ], "col_offset": 8, "end_col_offset": 60, "end_lineno": 20, "func": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 22, "ctx": { "_type": "Load" }, "end_col_offset": 32, "end_lineno": 20, "id": "nb_classes", "lineno": 20 }, { "_type": "Constant", "col_offset": 34, "end_col_offset": 35, "end_lineno": 20, "kind": null, "lineno": 20, "n": 1, "s": 1, "value": 1 } ], "col_offset": 8, "end_col_offset": 53, "end_lineno": 20, "func": { "_type": "Name", "col_offset": 8, "ctx": { "_type": "Load" }, "end_col_offset": 21, "end_lineno": 20, "id": "Convolution2D", "lineno": 20 }, "keywords": [ { "_type": "keyword", "arg": "padding", "col_offset": 37, "end_col_offset": 52, "end_lineno": 20, "lineno": 20, "value": { "_type": "Constant", "col_offset": 45, "end_col_offset": 52, "end_lineno": 20, "kind": null, "lineno": 20, "n": "valid", "s": "valid", "value": "valid" } } ], "lineno": 20 }, "keywords": [], "lineno": 20 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 33, "end_lineno": 21, "lineno": 21, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 5, "end_lineno": 21, "id": "relu9", "lineno": 21 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 27, "ctx": { "_type": "Load" }, "end_col_offset": 32, "end_lineno": 21, "id": "conv9", "lineno": 21 } ], "col_offset": 8, "end_col_offset": 33, "end_lineno": 21, "func": { "_type": "Call", "args": [ { "_type": "Constant", "col_offset": 19, "end_col_offset": 25, "end_lineno": 21, "kind": null, "lineno": 21, "n": "relu", "s": "relu", "value": "relu" } ], "col_offset": 8, "end_col_offset": 26, "end_lineno": 21, "func": { "_type": "Name", "col_offset": 8, "ctx": { "_type": "Load" }, "end_col_offset": 18, "end_lineno": 21, "id": "Activation", "lineno": 21 }, "keywords": [], "lineno": 21 }, "keywords": [], "lineno": 21 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 46, "end_lineno": 24, "lineno": 24, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 3, "end_lineno": 24, "id": "gap", "lineno": 24 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 40, "ctx": { "_type": "Load" }, "end_col_offset": 45, "end_lineno": 24, "id": "relu9", "lineno": 24 } ], "col_offset": 6, "end_col_offset": 46, "end_lineno": 24, "func": { "_type": "Call", "args": [], "col_offset": 6, "end_col_offset": 39, "end_lineno": 24, "func": { "_type": "Name", "col_offset": 6, "ctx": { "_type": "Load" }, "end_col_offset": 22, "end_lineno": 24, "id": "AveragePooling2D", "lineno": 24 }, "keywords": [ { "_type": "keyword", "arg": "pool_size", "col_offset": 23, "end_col_offset": 38, "end_lineno": 24, "lineno": 24, "value": { "_type": "Tuple", "col_offset": 33, "ctx": { "_type": "Load" }, "dims": [ { "_type": "Constant", "col_offset": 34, "end_col_offset": 35, "end_lineno": 24, "kind": null, "lineno": 24, "n": 7, "s": 7, "value": 7 }, { "_type": "Constant", "col_offset": 36, "end_col_offset": 37, "end_lineno": 24, "kind": null, "lineno": 24, "n": 7, "s": 7, "value": 7 } ], "elts": [ { "_type": "Constant", "col_offset": 34, "end_col_offset": 35, "end_lineno": 24, "kind": null, "lineno": 24, "n": 7, "s": 7, "value": 7 }, { "_type": "Constant", "col_offset": 36, "end_col_offset": 37, "end_lineno": 24, "kind": null, "lineno": 24, "n": 7, "s": 7, "value": 7 } ], "end_col_offset": 38, "end_lineno": 24, "lineno": 24 } } ], "lineno": 24 }, "keywords": [], "lineno": 24 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 20, "end_lineno": 25, "lineno": 25, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 3, "end_lineno": 25, "id": "flt", "lineno": 25 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 16, "ctx": { "_type": "Load" }, "end_col_offset": 19, "end_lineno": 25, "id": "gap", "lineno": 25 } ], "col_offset": 6, "end_col_offset": 20, "end_lineno": 25, "func": { "_type": "Call", "args": [], "col_offset": 6, "end_col_offset": 15, "end_lineno": 25, "func": { "_type": "Name", "col_offset": 6, "ctx": { "_type": "Load" }, "end_col_offset": 13, "end_lineno": 25, "id": "Flatten", "lineno": 25 }, "keywords": [], "lineno": 25 }, "keywords": [], "lineno": 25 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 33, "end_lineno": 26, "lineno": 26, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 4, "end_lineno": 26, "id": "sftm", "lineno": 26 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 29, "ctx": { "_type": "Load" }, "end_col_offset": 32, "end_lineno": 26, "id": "flt", "lineno": 26 } ], "col_offset": 7, "end_col_offset": 33, "end_lineno": 26, "func": { "_type": "Call", "args": [ { "_type": "Constant", "col_offset": 18, "end_col_offset": 27, "end_lineno": 26, "kind": null, "lineno": 26, "n": "softmax", "s": "softmax", "value": "softmax" } ], "col_offset": 7, "end_col_offset": 28, "end_lineno": 26, "func": { "_type": "Name", "col_offset": 7, "ctx": { "_type": "Load" }, "end_col_offset": 17, "end_lineno": 26, "id": "Activation", "lineno": 26 }, "keywords": [], "lineno": 26 }, "keywords": [], "lineno": 26 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 43, "end_lineno": 27, "lineno": 27, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 5, "end_lineno": 27, "id": "model", "lineno": 27 } ], "type_comment": null, "value": { "_type": "Call", "args": [], "col_offset": 8, "end_col_offset": 43, "end_lineno": 27, "func": { "_type": "Name", "col_offset": 8, "ctx": { "_type": "Load" }, "end_col_offset": 13, "end_lineno": 27, "id": "Model", "lineno": 27 }, "keywords": [ { "_type": "keyword", "arg": "input", "col_offset": 14, "end_col_offset": 29, "end_lineno": 27, "lineno": 27, "value": { "_type": "Name", "col_offset": 20, "ctx": { "_type": "Load" }, "end_col_offset": 29, "end_lineno": 27, "id": "input_img", "lineno": 27 } }, { "_type": "keyword", "arg": "output", "col_offset": 31, "end_col_offset": 42, "end_lineno": 27, "lineno": 27, "value": { "_type": "Name", "col_offset": 38, "ctx": { "_type": "Load" }, "end_col_offset": 42, "end_lineno": 27, "id": "sftm", "lineno": 27 } } ], "lineno": 27 } } ], "type_ignores": [] }'.


self assert:  model class equals: FamixPythonModule.
self assert:  model name equals: 'test'.
]

{ #category : #parsing }
FPyIJsonVisitorTest >> testVisitJson [

	| model imports |
	model := self visitJson:
		         '{ "_type": "Module", "body": [ { "_type": "ImportFrom", "col_offset": 0, "end_col_offset": 52, "end_lineno": 2, "level": 0, "lineno": 2, "module": "keras.layers.convolutional", "names": [ { "_type": "alias", "asname": null, "col_offset": 39, "end_col_offset": 52, "end_lineno": 2, "lineno": 2, "name": "Convolution2D" } ] }, { "_type": "ImportFrom", "col_offset": 0, "end_col_offset": 82, "end_lineno": 3, "level": 0, "lineno": 3, "module": "keras.layers", "names": [ { "_type": "alias", "asname": null, "col_offset": 25, "end_col_offset": 32, "end_lineno": 3, "lineno": 3, "name": "Flatten" }, { "_type": "alias", "asname": null, "col_offset": 34, "end_col_offset": 44, "end_lineno": 3, "lineno": 3, "name": "Activation" }, { "_type": "alias", "asname": null, "col_offset": 46, "end_col_offset": 62, "end_lineno": 3, "lineno": 3, "name": "AveragePooling2D" }, { "_type": "alias", "asname": null, "col_offset": 64, "end_col_offset": 82, "end_lineno": 3, "lineno": 3, "name": "BatchNormalization" } ] }, { "_type": "ImportFrom", "col_offset": 0, "end_col_offset": 30, "end_lineno": 4, "level": 0, "lineno": 4, "module": "keras.models", "names": [ { "_type": "alias", "asname": null, "col_offset": 25, "end_col_offset": 30, "end_lineno": 4, "lineno": 4, "name": "Model" } ] }, { "_type": "ImportFrom", "col_offset": 0, "end_col_offset": 30, "end_lineno": 5, "level": 0, "lineno": 5, "module": "keras.layers", "names": [ { "_type": "alias", "asname": null, "col_offset": 25, "end_col_offset": 30, "end_lineno": 5, "lineno": 5, "name": "Input" } ] }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 15, "end_lineno": 7, "lineno": 7, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 10, "end_lineno": 7, "id": "nb_classes", "lineno": 7 } ], "type_comment": null, "value": { "_type": "Constant", "col_offset": 13, "end_col_offset": 15, "end_lineno": 7, "kind": null, "lineno": 7, "n": 10, "s": 10, "value": 10 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 34, "end_lineno": 8, "lineno": 8, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 9, "end_lineno": 8, "id": "input_img", "lineno": 8 } ], "type_comment": null, "value": { "_type": "Call", "args": [], "col_offset": 12, "end_col_offset": 34, "end_lineno": 8, "func": { "_type": "Name", "col_offset": 12, "ctx": { "_type": "Load" }, "end_col_offset": 17, "end_lineno": 8, "id": "Input", "lineno": 8 }, "keywords": [ { "_type": "keyword", "arg": "shape", "col_offset": 18, "end_col_offset": 33, "end_lineno": 8, "lineno": 8, "value": { "_type": "Tuple", "col_offset": 24, "ctx": { "_type": "Load" }, "dims": [ { "_type": "Constant", "col_offset": 25, "end_col_offset": 27, "end_lineno": 8, "kind": null, "lineno": 8, "n": 28, "s": 28, "value": 28 }, { "_type": "Constant", "col_offset": 28, "end_col_offset": 30, "end_lineno": 8, "kind": null, "lineno": 8, "n": 28, "s": 28, "value": 28 }, { "_type": "Constant", "col_offset": 31, "end_col_offset": 32, "end_lineno": 8, "kind": null, "lineno": 8, "n": 1, "s": 1, "value": 1 } ], "elts": [ { "_type": "Constant", "col_offset": 25, "end_col_offset": 27, "end_lineno": 8, "kind": null, "lineno": 8, "n": 28, "s": 28, "value": 28 }, { "_type": "Constant", "col_offset": 28, "end_col_offset": 30, "end_lineno": 8, "kind": null, "lineno": 8, "n": 28, "s": 28, "value": 28 }, { "_type": "Constant", "col_offset": 31, "end_col_offset": 32, "end_lineno": 8, "kind": null, "lineno": 8, "n": 1, "s": 1, "value": 1 } ], "end_col_offset": 33, "end_lineno": 8, "lineno": 8 } } ], "lineno": 8 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 68, "end_lineno": 10, "lineno": 10, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 5, "end_lineno": 10, "id": "conv6", "lineno": 10 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 62, "ctx": { "_type": "Load" }, "end_col_offset": 67, "end_lineno": 10, "id": "relu5", "lineno": 10 } ], "col_offset": 8, "end_col_offset": 68, "end_lineno": 10, "func": { "_type": "Call", "args": [ { "_type": "Constant", "col_offset": 22, "end_col_offset": 25, "end_lineno": 10, "kind": null, "lineno": 10, "n": 192, "s": 192, "value": 192 }, { "_type": "Constant", "col_offset": 27, "end_col_offset": 28, "end_lineno": 10, "kind": null, "lineno": 10, "n": 3, "s": 3, "value": 3 } ], "col_offset": 8, "end_col_offset": 61, "end_lineno": 10, "func": { "_type": "Name", "col_offset": 8, "ctx": { "_type": "Load" }, "end_col_offset": 21, "end_lineno": 10, "id": "Convolution2D", "lineno": 10 }, "keywords": [ { "_type": "keyword", "arg": "strides", "col_offset": 30, "end_col_offset": 43, "end_lineno": 10, "lineno": 10, "value": { "_type": "Tuple", "col_offset": 38, "ctx": { "_type": "Load" }, "dims": [ { "_type": "Constant", "col_offset": 39, "end_col_offset": 40, "end_lineno": 10, "kind": null, "lineno": 10, "n": 2, "s": 2, "value": 2 }, { "_type": "Constant", "col_offset": 41, "end_col_offset": 42, "end_lineno": 10, "kind": null, "lineno": 10, "n": 2, "s": 2, "value": 2 } ], "elts": [ { "_type": "Constant", "col_offset": 39, "end_col_offset": 40, "end_lineno": 10, "kind": null, "lineno": 10, "n": 2, "s": 2, "value": 2 }, { "_type": "Constant", "col_offset": 41, "end_col_offset": 42, "end_lineno": 10, "kind": null, "lineno": 10, "n": 2, "s": 2, "value": 2 } ], "end_col_offset": 43, "end_lineno": 10, "lineno": 10 } }, { "_type": "keyword", "arg": "padding", "col_offset": 45, "end_col_offset": 60, "end_lineno": 10, "lineno": 10, "value": { "_type": "Constant", "col_offset": 53, "end_col_offset": 60, "end_lineno": 10, "kind": null, "lineno": 10, "n": "valid", "s": "valid", "value": "valid" } } ], "lineno": 10 }, "keywords": [], "lineno": 10 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 33, "end_lineno": 12, "lineno": 12, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 3, "end_lineno": 12, "id": "bn2", "lineno": 12 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 27, "ctx": { "_type": "Load" }, "end_col_offset": 32, "end_lineno": 12, "id": "conv6", "lineno": 12 } ], "col_offset": 6, "end_col_offset": 33, "end_lineno": 12, "func": { "_type": "Call", "args": [], "col_offset": 6, "end_col_offset": 26, "end_lineno": 12, "func": { "_type": "Name", "col_offset": 6, "ctx": { "_type": "Load" }, "end_col_offset": 24, "end_lineno": 12, "id": "BatchNormalization", "lineno": 12 }, "keywords": [], "lineno": 12 }, "keywords": [], "lineno": 12 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 31, "end_lineno": 13, "lineno": 13, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 5, "end_lineno": 13, "id": "relu6", "lineno": 13 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 27, "ctx": { "_type": "Load" }, "end_col_offset": 30, "end_lineno": 13, "id": "bn2", "lineno": 13 } ], "col_offset": 8, "end_col_offset": 31, "end_lineno": 13, "func": { "_type": "Call", "args": [ { "_type": "Constant", "col_offset": 19, "end_col_offset": 25, "end_lineno": 13, "kind": null, "lineno": 13, "n": "relu", "s": "relu", "value": "relu" } ], "col_offset": 8, "end_col_offset": 26, "end_lineno": 13, "func": { "_type": "Name", "col_offset": 8, "ctx": { "_type": "Load" }, "end_col_offset": 18, "end_lineno": 13, "id": "Activation", "lineno": 13 }, "keywords": [], "lineno": 13 }, "keywords": [], "lineno": 13 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 52, "end_lineno": 14, "lineno": 14, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 5, "end_lineno": 14, "id": "conv7", "lineno": 14 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 46, "ctx": { "_type": "Load" }, "end_col_offset": 51, "end_lineno": 14, "id": "relu6", "lineno": 14 } ], "col_offset": 8, "end_col_offset": 52, "end_lineno": 14, "func": { "_type": "Call", "args": [ { "_type": "Constant", "col_offset": 22, "end_col_offset": 25, "end_lineno": 14, "kind": null, "lineno": 14, "n": 192, "s": 192, "value": 192 }, { "_type": "Constant", "col_offset": 27, "end_col_offset": 28, "end_lineno": 14, "kind": null, "lineno": 14, "n": 3, "s": 3, "value": 3 } ], "col_offset": 8, "end_col_offset": 45, "end_lineno": 14, "func": { "_type": "Name", "col_offset": 8, "ctx": { "_type": "Load" }, "end_col_offset": 21, "end_lineno": 14, "id": "Convolution2D", "lineno": 14 }, "keywords": [ { "_type": "keyword", "arg": "padding", "col_offset": 30, "end_col_offset": 44, "end_lineno": 14, "lineno": 14, "value": { "_type": "Constant", "col_offset": 38, "end_col_offset": 44, "end_lineno": 14, "kind": null, "lineno": 14, "n": "same", "s": "same", "value": "same" } } ], "lineno": 14 }, "keywords": [], "lineno": 14 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 33, "end_lineno": 15, "lineno": 15, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 5, "end_lineno": 15, "id": "relu7", "lineno": 15 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 27, "ctx": { "_type": "Load" }, "end_col_offset": 32, "end_lineno": 15, "id": "conv7", "lineno": 15 } ], "col_offset": 8, "end_col_offset": 33, "end_lineno": 15, "func": { "_type": "Call", "args": [ { "_type": "Constant", "col_offset": 19, "end_col_offset": 25, "end_lineno": 15, "kind": null, "lineno": 15, "n": "relu", "s": "relu", "value": "relu" } ], "col_offset": 8, "end_col_offset": 26, "end_lineno": 15, "func": { "_type": "Name", "col_offset": 8, "ctx": { "_type": "Load" }, "end_col_offset": 18, "end_lineno": 15, "id": "Activation", "lineno": 15 }, "keywords": [], "lineno": 15 }, "keywords": [], "lineno": 15 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 53, "end_lineno": 17, "lineno": 17, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 5, "end_lineno": 17, "id": "conv8", "lineno": 17 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 47, "ctx": { "_type": "Load" }, "end_col_offset": 52, "end_lineno": 17, "id": "relu7", "lineno": 17 } ], "col_offset": 8, "end_col_offset": 53, "end_lineno": 17, "func": { "_type": "Call", "args": [ { "_type": "Constant", "col_offset": 22, "end_col_offset": 25, "end_lineno": 17, "kind": null, "lineno": 17, "n": 192, "s": 192, "value": 192 }, { "_type": "Constant", "col_offset": 27, "end_col_offset": 28, "end_lineno": 17, "kind": null, "lineno": 17, "n": 1, "s": 1, "value": 1 } ], "col_offset": 8, "end_col_offset": 46, "end_lineno": 17, "func": { "_type": "Name", "col_offset": 8, "ctx": { "_type": "Load" }, "end_col_offset": 21, "end_lineno": 17, "id": "Convolution2D", "lineno": 17 }, "keywords": [ { "_type": "keyword", "arg": "padding", "col_offset": 30, "end_col_offset": 45, "end_lineno": 17, "lineno": 17, "value": { "_type": "Constant", "col_offset": 38, "end_col_offset": 45, "end_lineno": 17, "kind": null, "lineno": 17, "n": "valid", "s": "valid", "value": "valid" } } ], "lineno": 17 }, "keywords": [], "lineno": 17 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 33, "end_lineno": 18, "lineno": 18, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 5, "end_lineno": 18, "id": "relu8", "lineno": 18 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 27, "ctx": { "_type": "Load" }, "end_col_offset": 32, "end_lineno": 18, "id": "conv8", "lineno": 18 } ], "col_offset": 8, "end_col_offset": 33, "end_lineno": 18, "func": { "_type": "Call", "args": [ { "_type": "Constant", "col_offset": 19, "end_col_offset": 25, "end_lineno": 18, "kind": null, "lineno": 18, "n": "relu", "s": "relu", "value": "relu" } ], "col_offset": 8, "end_col_offset": 26, "end_lineno": 18, "func": { "_type": "Name", "col_offset": 8, "ctx": { "_type": "Load" }, "end_col_offset": 18, "end_lineno": 18, "id": "Activation", "lineno": 18 }, "keywords": [], "lineno": 18 }, "keywords": [], "lineno": 18 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 60, "end_lineno": 20, "lineno": 20, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 5, "end_lineno": 20, "id": "conv9", "lineno": 20 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 54, "ctx": { "_type": "Load" }, "end_col_offset": 59, "end_lineno": 20, "id": "relu8", "lineno": 20 } ], "col_offset": 8, "end_col_offset": 60, "end_lineno": 20, "func": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 22, "ctx": { "_type": "Load" }, "end_col_offset": 32, "end_lineno": 20, "id": "nb_classes", "lineno": 20 }, { "_type": "Constant", "col_offset": 34, "end_col_offset": 35, "end_lineno": 20, "kind": null, "lineno": 20, "n": 1, "s": 1, "value": 1 } ], "col_offset": 8, "end_col_offset": 53, "end_lineno": 20, "func": { "_type": "Name", "col_offset": 8, "ctx": { "_type": "Load" }, "end_col_offset": 21, "end_lineno": 20, "id": "Convolution2D", "lineno": 20 }, "keywords": [ { "_type": "keyword", "arg": "padding", "col_offset": 37, "end_col_offset": 52, "end_lineno": 20, "lineno": 20, "value": { "_type": "Constant", "col_offset": 45, "end_col_offset": 52, "end_lineno": 20, "kind": null, "lineno": 20, "n": "valid", "s": "valid", "value": "valid" } } ], "lineno": 20 }, "keywords": [], "lineno": 20 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 33, "end_lineno": 21, "lineno": 21, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 5, "end_lineno": 21, "id": "relu9", "lineno": 21 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 27, "ctx": { "_type": "Load" }, "end_col_offset": 32, "end_lineno": 21, "id": "conv9", "lineno": 21 } ], "col_offset": 8, "end_col_offset": 33, "end_lineno": 21, "func": { "_type": "Call", "args": [ { "_type": "Constant", "col_offset": 19, "end_col_offset": 25, "end_lineno": 21, "kind": null, "lineno": 21, "n": "relu", "s": "relu", "value": "relu" } ], "col_offset": 8, "end_col_offset": 26, "end_lineno": 21, "func": { "_type": "Name", "col_offset": 8, "ctx": { "_type": "Load" }, "end_col_offset": 18, "end_lineno": 21, "id": "Activation", "lineno": 21 }, "keywords": [], "lineno": 21 }, "keywords": [], "lineno": 21 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 46, "end_lineno": 24, "lineno": 24, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 3, "end_lineno": 24, "id": "gap", "lineno": 24 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 40, "ctx": { "_type": "Load" }, "end_col_offset": 45, "end_lineno": 24, "id": "relu9", "lineno": 24 } ], "col_offset": 6, "end_col_offset": 46, "end_lineno": 24, "func": { "_type": "Call", "args": [], "col_offset": 6, "end_col_offset": 39, "end_lineno": 24, "func": { "_type": "Name", "col_offset": 6, "ctx": { "_type": "Load" }, "end_col_offset": 22, "end_lineno": 24, "id": "AveragePooling2D", "lineno": 24 }, "keywords": [ { "_type": "keyword", "arg": "pool_size", "col_offset": 23, "end_col_offset": 38, "end_lineno": 24, "lineno": 24, "value": { "_type": "Tuple", "col_offset": 33, "ctx": { "_type": "Load" }, "dims": [ { "_type": "Constant", "col_offset": 34, "end_col_offset": 35, "end_lineno": 24, "kind": null, "lineno": 24, "n": 7, "s": 7, "value": 7 }, { "_type": "Constant", "col_offset": 36, "end_col_offset": 37, "end_lineno": 24, "kind": null, "lineno": 24, "n": 7, "s": 7, "value": 7 } ], "elts": [ { "_type": "Constant", "col_offset": 34, "end_col_offset": 35, "end_lineno": 24, "kind": null, "lineno": 24, "n": 7, "s": 7, "value": 7 }, { "_type": "Constant", "col_offset": 36, "end_col_offset": 37, "end_lineno": 24, "kind": null, "lineno": 24, "n": 7, "s": 7, "value": 7 } ], "end_col_offset": 38, "end_lineno": 24, "lineno": 24 } } ], "lineno": 24 }, "keywords": [], "lineno": 24 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 20, "end_lineno": 25, "lineno": 25, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 3, "end_lineno": 25, "id": "flt", "lineno": 25 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 16, "ctx": { "_type": "Load" }, "end_col_offset": 19, "end_lineno": 25, "id": "gap", "lineno": 25 } ], "col_offset": 6, "end_col_offset": 20, "end_lineno": 25, "func": { "_type": "Call", "args": [], "col_offset": 6, "end_col_offset": 15, "end_lineno": 25, "func": { "_type": "Name", "col_offset": 6, "ctx": { "_type": "Load" }, "end_col_offset": 13, "end_lineno": 25, "id": "Flatten", "lineno": 25 }, "keywords": [], "lineno": 25 }, "keywords": [], "lineno": 25 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 33, "end_lineno": 26, "lineno": 26, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 4, "end_lineno": 26, "id": "sftm", "lineno": 26 } ], "type_comment": null, "value": { "_type": "Call", "args": [ { "_type": "Name", "col_offset": 29, "ctx": { "_type": "Load" }, "end_col_offset": 32, "end_lineno": 26, "id": "flt", "lineno": 26 } ], "col_offset": 7, "end_col_offset": 33, "end_lineno": 26, "func": { "_type": "Call", "args": [ { "_type": "Constant", "col_offset": 18, "end_col_offset": 27, "end_lineno": 26, "kind": null, "lineno": 26, "n": "softmax", "s": "softmax", "value": "softmax" } ], "col_offset": 7, "end_col_offset": 28, "end_lineno": 26, "func": { "_type": "Name", "col_offset": 7, "ctx": { "_type": "Load" }, "end_col_offset": 17, "end_lineno": 26, "id": "Activation", "lineno": 26 }, "keywords": [], "lineno": 26 }, "keywords": [], "lineno": 26 } }, { "_type": "Assign", "col_offset": 0, "end_col_offset": 43, "end_lineno": 27, "lineno": 27, "targets": [ { "_type": "Name", "col_offset": 0, "ctx": { "_type": "Store" }, "end_col_offset": 5, "end_lineno": 27, "id": "model", "lineno": 27 } ], "type_comment": null, "value": { "_type": "Call", "args": [], "col_offset": 8, "end_col_offset": 43, "end_lineno": 27, "func": { "_type": "Name", "col_offset": 8, "ctx": { "_type": "Load" }, "end_col_offset": 13, "end_lineno": 27, "id": "Model", "lineno": 27 }, "keywords": [ { "_type": "keyword", "arg": "input", "col_offset": 14, "end_col_offset": 29, "end_lineno": 27, "lineno": 27, "value": { "_type": "Name", "col_offset": 20, "ctx": { "_type": "Load" }, "end_col_offset": 29, "end_lineno": 27, "id": "input_img", "lineno": 27 } }, { "_type": "keyword", "arg": "output", "col_offset": 31, "end_col_offset": 42, "end_lineno": 27, "lineno": 27, "value": { "_type": "Name", "col_offset": 38, "ctx": { "_type": "Load" }, "end_col_offset": 42, "end_lineno": 27, "id": "sftm", "lineno": 27 } } ], "lineno": 27 } } ], "type_ignores": [] }'.


	self assert: model class equals: FamixPythonModel.
	self assert: model name equals: 'PythonModel'.
	imports := model allWithType: FamixPythonImport.
	self assert: imports size equals: 7
]

{ #category : #parsing }
FPyIJsonVisitorTest >> visitJson: jsonCode [

	"	^FPyIJsonVisitor new visitJsonEntity: ((NeoJSONReader on: jsonCode readStream) next)"

	| visitor |
	visitor := FPyIJsonVisitor new.

	visitor visitJsonEntity: (NeoJSONReader fromString: jsonCode).
	^ visitor model
]
